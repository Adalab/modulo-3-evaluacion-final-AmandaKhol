{"version":3,"sources":["services/getDataFromApi.js","images/rym.png","services/getIconSpecies.js","services/getIconStatus.js","components/CharacterDetail.js","components/Reset.js","components/Filter.js","components/CharacterCard.js","components/CharacterList.js","components/Warning.js","components/Browser.js","components/App.js","index.js"],"names":["getDataFromApi","fetch","then","response","json","data","results","map","character","id","name","species","status","photo","image","origin","episodes","episode","length","iconHuman","className","iconAlien","getIconSpecies","toLowerCase","iconAlive","iconDead","iconUnknown","getIconStatus","CharacterDetail","props","to","src","alt","title","Reset","type","onClick","handleReset","Filter","handleChange","ev","handleSelect","target","value","action","onSubmit","preventDefault","htmlFor","inputValue","onChange","placeholder","speciesSelect","index","CharacterCard","CharacterList","characters","handleDetailCharacter","propsTypes","PropTypes","array","Warning","warningCode","propTyes","number","string","Browser","App","useState","setCharacters","characterSelect","setCharacterSelect","setSpeciesSelect","useEffect","orderedData","sort","a","b","speciesList","speciesListUnique","Set","filterCharacters","filter","includes","rym","exact","path","inputId","render","routerProps","routerCharacterId","match","params","routerCharacterIdInt","parseInt","routerCharacterIdString","characterFound","find","isNaN","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c416168b.chunk.js","sourcesContent":["const getDataFromApi = () => {\n  return fetch('https://rickandmortyapi.com/api/character')\n    .then((response) => response.json())\n    .then((data) => {\n      /* AquÃ­ estamos mapeando el array data para limpiarlo */\n      return data.results.map((character) => {\n        return {\n          id: character.id,\n          name: character.name,\n          species: character.species,\n          status: character.status,\n          photo: character.image,\n          origin: character.origin.name,\n          episodes: character.episode.length,\n        };\n      });\n    });\n};\n\nexport default getDataFromApi;\n","export default __webpack_public_path__ + \"static/media/rym.de13d484.png\";","const iconHuman = <i className=\"fas fa-user\"></i>;\nconst iconAlien = <i className=\"fas fa-meteor\"></i>;\n\nconst getIconSpecies = (species) => {\n  return species.toLowerCase() === 'human' ? iconHuman : iconAlien;\n};\n\nexport default getIconSpecies;\n","const iconAlive = <i className=\"fas fa-heartbeat\"></i>;\nconst iconDead = <i className=\"fas fa-dizzy\"></i>;\nconst iconUnknown = <i className=\"fas fa-question-circle\"></i>;\n\nconst getIconStatus = (status) => {\n  if (status.toLowerCase() === 'alive') {\n    return iconAlive;\n  } else if (status.toLowerCase() === 'dead') {\n    return iconDead;\n  } else {\n    return iconUnknown;\n  }\n};\n\nexport default getIconStatus;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/components/_character-detail.scss';\nimport { Link } from 'react-router-dom';\nimport getIconSpecies from '../services/getIconSpecies';\nimport getIconStatus from '../services/getIconStatus';\n\nconst CharacterDetail = (props) => {\n  const { name, species, status, photo, origin, episodes } = props.character;\n\n  return (\n    <section className=\"detail\">\n      <Link className=\"detail__return\" to=\"/\">\n        <i className=\"detail__return--icon fas fa-angle-left\"></i> Volver\n      </Link>\n      <div className=\"detail__card\">\n        <div className=\"detail__card--info\">\n          <h3>{name}</h3>\n          <h4>\n            Status:\n            <span className=\"detail__card--span\">\n              {status} - {getIconStatus(status)}\n            </span>\n          </h4>\n          <h4>\n            Species:\n            <span className=\"detail__card--span\">\n              {species} - {getIconSpecies(species)}\n            </span>\n          </h4>\n          <h4>\n            Origin:\n            <span className=\"detail__card--span\"> {origin}</span>\n          </h4>\n          <h4>\n            Episodes:\n            <span className=\"detail__card--span\">{episodes}</span>\n          </h4>\n        </div>\n        <img\n          className=\"detail__card--photo\"\n          src={photo}\n          alt={name + ' photo'}\n          title={name + ' photo'}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default CharacterDetail;\n\nCharacterDetail.propTypes = {\n  character: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    status: PropTypes.string,\n    origin: PropTypes.string,\n    episodes: PropTypes.number,\n    species: PropTypes.string,\n    photo: PropTypes.string,\n  }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/components/_reset.scss';\n\nconst Reset = (props) => {\n  const handleReset = () => {\n    props.handleReset();\n  };\n  return (\n    <button className=\"reset-btn\" type=\"button\" onClick={handleReset}>\n      Reset\n    </button>\n  );\n};\n\nexport default Reset;\n\nReset.propTypes = {\n  handleReset: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/components/_filter.scss';\nimport Reset from './Reset';\n\nconst Filter = (props) => {\n  const handleChange = (ev) => {\n    return props.handleSelect(ev.target.id, ev.target.value);\n  };\n\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n  };\n\n  const renderSpeciesOptions = () => {\n    return props.species.map((species, index) => {\n      return (\n        <option key={index} value={species}>\n          {species}\n        </option>\n      );\n    });\n  };\n  return (\n    <section className=\"form-section\">\n      <form className=\"form\" action=\"\" onSubmit={handleSubmit}>\n        <fieldset className=\"form__fieldset\">\n          <label htmlFor=\"character\">Search a character:</label>\n          <input\n            className=\"form__input\"\n            id=\"character\"\n            type=\"text\"\n            value={props.inputValue}\n            onChange={handleChange}\n            placeholder=\"Name...\"\n          />\n        </fieldset>\n\n        <fieldset className=\"form__fieldset\">\n          <label htmlFor=\"species\">Select the species:</label>\n          <select\n            className=\"form__select\"\n            name=\"species\"\n            id=\"species\"\n            onChange={handleChange}\n            value={props.speciesSelect}\n          >\n            <option value=\"all\">-</option>\n            {renderSpeciesOptions()}\n          </select>\n        </fieldset>\n      </form>\n      <Reset handleReset={props.handleReset} />\n    </section>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  handleSelect: PropTypes.func,\n  inputValue: PropTypes.string,\n  species: PropTypes.array,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/components/_character-card.scss';\nimport { Link } from 'react-router-dom';\nimport getIconSpecies from '../services/getIconSpecies';\nimport getIconStatus from '../services/getIconStatus';\n\nconst CharacterCard = (props) => {\n  const { id, name, photo, species, status } = props.character;\n  return (\n    <Link to={`/detail/${id}`} className=\"character__item\">\n      <div className=\"character__item--header\">\n        <h3 className=\"character__item--title\">{name}</h3>\n        <h4 className=\"character__item--species\">{species}</h4>\n        <div className=\"character__item--icons\">\n          <span>{getIconStatus(status)}</span>\n          <span>{getIconSpecies(species)}</span>\n        </div>\n      </div>\n      <img\n        className=\"character__item--image\"\n        src={photo}\n        alt={name + ' photo'}\n        title={name + ' photo'}\n      />\n    </Link>\n  );\n};\n\nexport default CharacterCard;\n\nCharacterCard.propTypes = {\n  character: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    species: PropTypes.string,\n    photo: PropTypes.string,\n    status: PropTypes.string,\n  }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CharacterCard from './CharacterCard';\nimport '../stylesheets/components/_character-list.scss';\n\nconst CharacterList = (props) => {\n  const characterElements = () => {\n    return props.characters.map((character) => {\n      return (\n        <li key={character.id} className=\"character__item\">\n          <CharacterCard\n            character={character}\n            handleDetailCharacter={props.handleDetailCharacter}\n          />\n        </li>\n      );\n    });\n  };\n\n  return (\n    <section className=\"characters\">\n      <ul\n        className={`characters__list characters__list--${props.characters.length}`}\n      >\n        {characterElements()}\n      </ul>\n    </section>\n  );\n};\n\nexport default CharacterList;\n\nCharacterList.propsTypes = {\n  characters: PropTypes.array,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Warning = (props) => {\n  const renderMsg = () => {\n    if (props.warningCode === 204) {\n      return (\n        <p className=\"content__warning--message\">\n          No hay ningÃºn personaje que coincida con la palabra:\n          <span className=\"content__warning--span\"> {props.inputValue}</span>\n        </p>\n      );\n    } else if (props.warningCode === 400) {\n      return (\n        <p className=\"content__warning--message\">\n          El personaje que buscas no existe\n        </p>\n      );\n    } else {\n      return <p className=\"content__warning--message\">PÃ¡gina no encontrada</p>;\n    }\n  };\n\n  return <div className=\"content__warning\">{renderMsg()}</div>;\n};\n\nexport default Warning;\n\nWarning.propTyes = {\n  warningCode: PropTypes.number,\n  inputValue: PropTypes.string,\n};\n","import React from 'react';\nimport '../stylesheets/components/_browser.scss';\nimport PropTypes from 'prop-types';\n\nimport Filter from './Filter';\nimport CharacterList from './CharacterList';\nimport Warning from './Warning';\n\nconst Browser = (props) => {\n  const renderCharacterListOrWarning = () => {\n    return props.characters.length !== 0 ? (\n      <CharacterList characters={props.characters} />\n    ) : (\n      <Warning warningCode={204} inputValue={props.inputValue} />\n    );\n  };\n\n  return (\n    <section className=\"browser\">\n      <Filter\n        handleSelect={props.handleSelect}\n        handleReset={props.handleReset}\n        inputValue={props.inputValue}\n        species={props.species}\n        speciesSelect={props.speciesSelect}\n      />\n      {renderCharacterListOrWarning()}\n    </section>\n  );\n};\n\nexport default Browser;\n\nBrowser.propTypes = {\n  inputValue: PropTypes.string,\n  characters: PropTypes.array,\n  handleSelect: PropTypes.func,\n  species: PropTypes.array,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport '../stylesheets/layout/_page.scss';\nimport '../stylesheets/layout/_footer.scss';\nimport getDataFromApi from '../services/getDataFromApi';\nimport rym from '../images/rym.png';\n\nimport CharacterDetail from './CharacterDetail';\nimport Browser from './Browser';\nimport Warning from './Warning';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [characterSelect, setCharacterSelect] = useState('');\n  const [speciesSelect, setSpeciesSelect] = useState('all');\n\n  useEffect(() => {\n    getDataFromApi().then((data) => {\n      const orderedData = data.sort((a, b) =>\n        a.name > b.name ? 1 : a.name < b.name ? -1 : 0\n      );\n      return setCharacters(orderedData);\n    });\n  }, []);\n\n  const handleReset = () => {\n    setCharacterSelect('');\n    setSpeciesSelect('all');\n  };\n\n  const handleSelect = (inputId, inputValue) => {\n    inputId === 'species'\n      ? setSpeciesSelect(inputValue)\n      : setCharacterSelect(inputValue);\n  };\n\n  const speciesList = characters.map((character) => character.species);\n  const speciesListUnique = [...new Set(speciesList)];\n\n  const filterCharacters = characters\n    .filter((character) =>\n      character.name.toLowerCase().includes(characterSelect.toLowerCase())\n    )\n    .filter((character) =>\n      speciesSelect === 'all' ? true : character.species === speciesSelect\n    );\n\n  const renderCharacter = (routerProps) => {\n    const routerCharacterId = routerProps.match.params.id;\n    const routerCharacterIdInt = parseInt(routerCharacterId);\n    const routerCharacterIdString = routerCharacterIdInt + '';\n    const characterFound = characters.find(\n      (character) => character.id === routerCharacterIdInt\n    );\n    return !characterFound ||\n      routerCharacterIdString !== routerCharacterId ||\n      isNaN(routerCharacterIdInt) ? (\n      <Warning warningCode={400} />\n    ) : (\n      <CharacterDetail character={characterFound} />\n    );\n  };\n\n  return (\n    <>\n      <header className=\"page__header\">\n        <img\n          className=\"page__header--image\"\n          src={rym}\n          alt=\"logo\"\n          title=\"logo\"\n        />\n      </header>\n      <main className=\"main\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Browser\n              inputValue={characterSelect}\n              handleSelect={handleSelect}\n              handleReset={handleReset}\n              characters={filterCharacters}\n              species={speciesListUnique}\n              speciesSelect={speciesSelect}\n            />\n          </Route>\n          <Route path=\"/detail/:id\" render={renderCharacter} />\n          <Route>\n            <Warning warningCode={404} />\n          </Route>\n        </Switch>\n      </main>\n      <footer className=\"page__footer\">\n        <small>Adalab and Amanda Khol &copy; 2021</small>\n      </footer>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './stylesheets/layout/_page.scss';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}